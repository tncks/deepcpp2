#include "stdafx.h"
#include <cassert>
#include <iostream>
#include <memory>

using namespace std;

class Data
{
public:
	Data() = default;
	explicit Data(int num)
	{
		m_num = num;
	}
	~Data() = default;

	int GetNum() const noexcept
	{
		return m_num;
	}
private:
	int m_num;
};


int main()
{
	shared_ptr<Data> pOldData = make_shared<Data>(100);
	assert(pOldData);

	Data* pOriginal = pOldData.get();
	assert(pOriginal);

	shared_ptr<Data> pNewData = pOldData;
	assert(pNewData);

	printf(" pOldData의 역참조값 : %d\n", pOldData->GetNum());
	printf("pOriginal의 역참조값 : %d\n", pOriginal->GetNum());
	printf(" pNewData의 역참조값 : %d\n\n", pNewData->GetNum());

	return 0;

}